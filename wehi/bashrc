# .bashrc
[ -z "$PS1" ] && return

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions

# Detect OS:

# If OS is CentOS:
if [ -f /etc/redhat-release ]; then
        centosVersion=`cat /etc/redhat-release | sed  "s/[^0-9.]//g"  | cut -d. -f1`
# If OS is Ubuntu
elif [ `lsb_release -i | awk '{print $3;}'` == "Ubuntu" ]; then
        test -f && . .bashrc_ubuntu
fi

. ~/.bash_aliases

export PATH=/home/users/allstaff/tankard.r/software/bin:$PATH


# Some applications read the EDITOR variable to determine your favourite text
# editor. So uncomment the line below and enter the editor of your choice :-)
export EDITOR=/usr/bin/vim

test -s ~/.alias && . ~/.alias || true


alias rm='rm -i'
alias ll='ls -lh'
alias up='cd ..'
alias size='du -h --max-depth=1'

# Aliases for squeue
alias q='squeue -u tankard.r'

# Add ssh agent
agent () {
    eval "$(ssh-agent -s)"
    ssh-add ~/.ssh/id_rsa
}

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi  
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac


# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
    else
    color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    # PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\n\$ '
    PS1='[${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]] \[\033[04;33m\]\D{%F %T}\[\033[00m\]\n\[\033[01;31m\]\$\[\033[00m\] '

else
    # PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
    PS1='[${debian_chroot:+($debian_chroot)}\u@\h:\w] \D{%F %T}\n\$ '
fi
unset color_prompt force_color_prompt


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/users/allstaff/tankard.r/software/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/users/allstaff/tankard.r/software/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/users/allstaff/tankard.r/software/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/users/allstaff/tankard.r/software/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

